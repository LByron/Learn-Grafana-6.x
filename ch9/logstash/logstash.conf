input {
  http_poller {
    urls => {
      countries => {
        method => "get"
        url => "https://api.openaq.org/v1/latest?country=US&limit=10000"
      }
    }
    schedule => { every => "10m" }
  }
}

filter {
  split {
    field => "results"
  }
  split {
    field => "[results][measurements]"
  }
  mutate {
    add_field => {
      "city" => "%{[results][city]}"
      "country" => "%{[results][country]}"
      "latitude" => "%{[results][coordinates][latitude]}"
      "longitude" => "%{[results][coordinates][longitude]}"
      "location" => "%{[results][location]}"
      "unit" => "%{[results][measurements][unit]}"
      "averagingPeriod" => "%{[results][measurements][averagingPeriod][value]} %{[results][measurements][averagingPeriod][unit]}"
      "%{[results][measurements][parameter]}" => "%{[results][measurements][value]}"
      "sourceName" => "%{[results][measurements][sourceName]}"
      "lastUpdated" => "%{[results][measurements][lastUpdated]}"
      "parameter" => "%{[results][measurements][parameter]}"
    }
    remove_field => [ "results", "measurements" ]
  }
  mutate {
    convert => {
      "latitude" => "float"
      "longitude" => "float"
      "bc" => "float"
      "no2" => "float"
      "o3" => "float"
      "pm10" => "float"
      "pm25" => "float"
      "so2" => "float"
    }
  }
  date {
    match => ["lastUpdated", "ISO8601"]
  }
}

output {
  elasticsearch {
    hosts => "elasticsearch:9200"
    index => "airquality"
    document_id => "%{country}-%{city}-%{location}-%{parameter}-%{lastUpdated}"
  }
  stdout {}
}